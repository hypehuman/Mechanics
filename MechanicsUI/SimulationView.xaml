<UserControl
    x:Class="MechanicsUI.SimulationView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:gbrViews="clr-namespace:GuiByReflection.Views;assembly=GuiByReflection.Views"
    xmlns:local="clr-namespace:MechanicsUI"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
    d:DataContext="{d:DesignInstance Type=local:DefaultSimulationVM, IsDesignTimeCreatable=True}"
>
    <DockPanel LastChildFill="True">
        <Expander DockPanel.Dock="Top" IsExpanded="True">
            <StackPanel Orientation="Horizontal">
                <GroupBox VerticalAlignment="Top" Margin="5" Header="Configuration">
                    <TextBox Margin="5" Style="{StaticResource SelectableReadonlyText}" Text="{Binding Config, Mode=OneWay}" />
                </GroupBox>
                <GroupBox VerticalAlignment="Top" Margin="5" Header="Controls">
                    <StackPanel Margin="5">
                        <StackPanel Margin="5">
                            <gbrViews:GuiHelpTooltipWrapper ToolTip="{Binding GlowRatioTooltip}">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Glow Ratio: "/>
                                    <TextBlock Text="{Binding MinGlowRadiusFractionOfFrame, StringFormat={}{0:0.0000}}" />
                                </StackPanel>
                            </gbrViews:GuiHelpTooltipWrapper>
                            <Slider
                                HorizontalAlignment="Left" Width="111"
                                Value="{Binding MinGlowRadiusFractionOfFrame}"
                                Minimum="0" Maximum="0.01"
                                IsSnapToTickEnabled="True" TickFrequency="0.0001"
                            />
                        </StackPanel>
                        <DockPanel Margin="5">
                            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="Steps per leap: " />
                            <local:ValidationTextBox VerticalAlignment="Center" DataContext="{Binding StepsPerLeapVM}" />
                        </DockPanel>
                        <TextBlock Margin="5" Text="{Binding LeapTimeText}" />
                        <StackPanel Orientation="Horizontal">
                            <Button Margin="5" VerticalAlignment="Center" Click="LeapButton_Click">Leap</Button>
                            <CheckBox Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsAutoLeaping}">Auto-leap</CheckBox>
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <GroupBox VerticalAlignment="Top" Margin="5" Header="Status">
                    <TextBox Margin="5" Style="{StaticResource SelectableReadonlyText}" Text="{Binding StateSummary, Mode=OneWay}" />
                </GroupBox>
            </StackPanel>
        </Expander>
        <Border
            local:SizeObserver.Observe="True"
            local:SizeObserver.ObservedSize="{Binding AvailableSizePix, Mode=OneWayToSource}"
        >
            <ItemsControl ItemsSource="{Binding BodyVMs}" Background="Black">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas
                            HorizontalAlignment="Center" VerticalAlignment="Center"
                            Width="0" Height="0"
                        >
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding CanvasScale}" ScaleY="{Binding CanvasScale}" />
                                    <TranslateTransform X="{Binding CanvasTranslateX}" Y="{Binding CanvasTranslateY}" />
                                </TransformGroup>
                            </Canvas.RenderTransform>
                        </Canvas>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Path>
                            <Path.Data>
                                <EllipseGeometry
                                    Center="{Binding PanelCenterXY}" 
                                    RadiusX="{Binding GlowRadius}" 
                                    RadiusY="{Binding GlowRadius}"
                                />
                            </Path.Data>
                            <Path.Fill>
                                <RadialGradientBrush>
                                    <!-- Maximum opacity from center to true radius. Opacity drops off to zero at glow radius. -->
                                    <GradientStop Offset="0" Color="{Binding WinMediaColor}" />
                                    <GradientStop Offset="{Binding TrueRadiusOverGlowRadius}" Color="{Binding WinMediaColor}" />
                                    <GradientStop Offset="1" Color="Transparent" />
                                </RadialGradientBrush>
                            </Path.Fill>
                        </Path>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Panel.ZIndex" Value="{Binding PanelZIndex}" />
                        <!-- This is a hack to allow us to click the Leap button even when a body is overlapping it. -->
                        <!-- This will make it impossible to interact with the body via the mouse. -->
                        <!-- A better solution would be to clip the canvas so that the bodies don't extend outside of it. -->
                        <Setter Property="IsHitTestVisible" Value="False" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </Border>
    </DockPanel>
</UserControl>
