<UserControl
    x:Class="MechanicsUI.SimulationLauncherView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:uiByReflectionViews="clr-namespace:GuiByReflection.Views;assembly=GuiByReflection.Views"
    xmlns:local="clr-namespace:MechanicsUI"
    mc:Ignorable="d"
>
    <UserControl.DataContext>
        <local:SimulationLauncherVM />
    </UserControl.DataContext>
    <DockPanel LastChildFill="True">
        <GroupBox Margin="5" Padding="5" Header="Gallery">
            <DockPanel LastChildFill="True">
                <TextBlock
                    DockPanel.Dock="Top"
                    Margin="5"
                    TextWrapping="Wrap"
                    Text="Click a scenario below in order to load its configuration values into the panel on the right."
                    MaxWidth="{Binding ElementName=ScenarioButtons, Path=ActualWidth}"
                />
                <ItemsControl x:Name="ScenarioButtons" HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding SavedScenarioVMs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <uiByReflectionViews:GuiHelpTooltipWrapper>
                                <Button HorizontalAlignment="Left" Click="LoadScenarioConfigButton_Click">
                                    <!-- Use TextBlock instead of directly setting Button.Content. -->
                                    <!-- This prevents underscores from being misinterpreted as access keys -->
                                    <TextBlock Text="{Binding ActualGuiName}" />
                                </Button>
                            </uiByReflectionViews:GuiHelpTooltipWrapper>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DockPanel>
        </GroupBox>
        <ScrollViewer>
            <StackPanel>
                <GroupBox Margin="5" Padding="5" Header="Arrangement">
                    <StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Text="Arrangement: " />
                            <!-- The ComboBox.ToolTip binding shows the tooltip for the selected option when mousing over the ComboBox while it is closed. -->
                            <!-- The GuiHelpTooltipWrapper shows the tooltip when mousing over options while the ComboBox is open. -->
                            <ComboBox
                                VerticalAlignment="Center"
                                SelectedItem="{Binding SelectedArranger}"
                                ItemsSource="{Binding ArrangerVMs}"
                                ToolTip="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem.ActualGuiHelp}"
                            >
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <uiByReflectionViews:GuiHelpTooltipWrapper>
                                            <TextBlock Text="{Binding ActualGuiName}" />
                                        </uiByReflectionViews:GuiHelpTooltipWrapper>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                        <uiByReflectionViews:MethodView DataContext="{Binding ArrangementConstructorVM}" />
                    </StackPanel>
                </GroupBox>
                <GroupBox Margin="5" Padding="5" Header="Physics">
                    <uiByReflectionViews:MethodView DataContext="{Binding PhysicsConfigConstructorVM}" />
                </GroupBox>
                <GroupBox Margin="5" Header="Controls">
                    <StackPanel>
                        <DockPanel Margin="5">
                            <TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="Steps per leap: " />
                            <local:ValidationTextBox VerticalAlignment="Center" DataContext="{Binding StepsPerLeapUponLaunchVM}" />
                        </DockPanel>
                        <CheckBox Margin="5" IsChecked="{Binding IsAutoLeapingUponLaunch}">Auto-leap</CheckBox>
                        <Button Margin="5" Click="LaunchButton_Click">Launch Simulation</Button>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</UserControl>
